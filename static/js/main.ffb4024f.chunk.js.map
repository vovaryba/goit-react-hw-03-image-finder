{"version":3,"sources":["components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","services/images-api.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","imageKeyword","handleTagChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warn","this","className","type","onChange","name","autoComplete","autoFocus","placeholder","Component","Loader","color","height","width","timeout","display","ImageGalleryItem","images","onClick","map","image","largeImageURL","tags","src","webformatURL","alt","id","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","children","createPortal","Button","api","fetchImages","url","keyword","page","api_key","per_page","fetch","then","res","ok","json","Promise","reject","Error","URL","API_KEY","ImageGallery","error","status","showModal","loading","buttonClick","nextKeyword","imagesAPI","prevState","hits","scrollWindow","catch","finally","toggleModal","modalImg","modalAlt","prevProps","prevKeyword","scrollTo","top","documentElement","scrollHeight","behavior","message","App","handleFormSubmit","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ffb4024f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport './Searchbar.css';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    imageKeyword: '',\r\n  };\r\n\r\n  handleTagChange = event => {\r\n    this.setState({ imageKeyword: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.imageKeyword.trim() === '') {\r\n      toast.warn('Введите ключевое слово в строку поиска');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.imageKeyword);\r\n    this.setState({ imageKeyword: '' });\r\n  };\r\n\r\n  render() {\r\n    const { imageKeyword } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={imageKeyword}\r\n            onChange={this.handleTagChange}\r\n            name=\"imageKeyword\"\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport LoaderDots from 'react-loader-spinner';\r\nimport './Loader.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <>\r\n      <LoaderDots\r\n        type=\"ThreeDots\"\r\n        color=\"#3ebb2e\"\r\n        height={50}\r\n        width={50}\r\n        timeout={0}\r\n        display=\"block\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport './ImageGalleryItem.css';\r\n\r\nfunction ImageGalleryItem({ images, onClick }) {\r\n  return (\r\n    <>\r\n      {images.map(image => (\r\n        <li\r\n          key={image.id}\r\n          onClick={() => onClick(image.largeImageURL, image.tags)}\r\n          className=\"ImageGalleryItem\"\r\n        >\r\n          <img\r\n            src={image.webformatURL}\r\n            alt={image.tags}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","function fetchImages(url, keyword, page, api_key, per_page) {\r\n  return fetch(\r\n    `${url}?q=${keyword}&page=${page}&key=${api_key}&image_type=photo&orientation=horizontal&per_page=${per_page}`,\r\n  ).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`Нет картинки с кодовым словом ${keyword}`),\r\n    );\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\r\nimport Loader from '../Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Modal from '../Modal';\r\nimport Button from '../Button';\r\nimport imagesAPI from '../../services/images-api';\r\nimport './ImageGallery.css';\r\n\r\nconst URL = 'https://pixabay.com/api/';\r\nconst API_KEY = '22634984-1ce924b253c51d48f10b47cfd';\r\nconst per_page = 12;\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    images: null,\r\n    error: null,\r\n    status: 'idle',\r\n    showModal: false,\r\n    loading: false,\r\n    page: 1,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevKeyword = prevProps.imageKeyword;\r\n    const nextKeyword = this.props.imageKeyword;\r\n    const { page } = this.state;\r\n\r\n    if (prevKeyword !== nextKeyword) {\r\n      this.setState({ status: 'pending', loading: true });\r\n\r\n      imagesAPI\r\n        .fetchImages(URL, nextKeyword, page, API_KEY, per_page)\r\n        .then(images => {\r\n          this.setState({\r\n            images: images.hits,\r\n            page: this.state.page + 1,\r\n            status: 'resolved',\r\n            loading: true,\r\n          });\r\n          this.scrollWindow();\r\n        })\r\n        .catch(error => this.setState({ error, status: 'rejected' }));\r\n    }\r\n  }\r\n\r\n  buttonClick = () => {\r\n    const nextKeyword = this.props.imageKeyword;\r\n    const { page } = this.state;\r\n    imagesAPI\r\n      .fetchImages(URL, nextKeyword, page, API_KEY, per_page)\r\n      .then(image => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...image.hits],\r\n          page: this.state.page + 1,\r\n          status: 'resolved',\r\n          loading: !prevState.loading,\r\n        }));\r\n        this.scrollWindow();\r\n      })\r\n      .catch(error => this.setState({ error, status: 'rejected' }))\r\n      .finally(\r\n        this.setState(prevState => ({\r\n          loading: !prevState.loading,\r\n        })),\r\n      );\r\n  };\r\n\r\n  scrollWindow() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n\r\n  toggleModal = (url, alt) => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n      modalImg: url,\r\n      modalAlt: alt,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { images, error, status, showModal, modalImg, modalAlt, loading } =\r\n      this.state;\r\n\r\n    if (status === 'idle') {\r\n      return <div>Введите ключевое слово</div>;\r\n    }\r\n\r\n    if (status === 'pending') {\r\n      return <Loader />;\r\n    }\r\n\r\n    if (status === 'rejected') {\r\n      return <h1>{error.message}</h1>;\r\n    }\r\n\r\n    if (status === 'resolved') {\r\n      return (\r\n        <>\r\n          <ul className=\"ImageGallery\">\r\n            <ImageGalleryItem images={images} onClick={this.toggleModal} />\r\n          </ul>\r\n          {loading && <Button onClick={this.buttonClick} />}\r\n          {showModal && (\r\n            <Modal onClose={this.toggleModal}>\r\n              <img src={modalImg} alt={modalAlt} />\r\n            </Modal>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    imageKeyword: '',\n  };\n\n  handleFormSubmit = imageKeyword => {\n    this.setState({ imageKeyword });\n  };\n\n  render() {\n    const { imageKeyword } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery imageKeyword={imageKeyword} />\n        <ToastContainer autoClose={3000} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}